---
- name: clear and warmup cache
  command: bin/console cache:clear && bin/console cache:warmup
  args:
    chdir: "{{ userli_symfony_path }}"
  environment:
    APP_ENV: "prod"
  become_user: "{{ userli_user }}"
  ignore_errors: true
  register: cache

- name: handle cache:clear errors
  command: rm -rf var/cache/prod && bin/console cache:warmup
  args:
    chdir: "{{ userli_symfony_path }}"
  environment:
    APP_ENV: "prod"
  become_user: "{{ userli_user }}"
  when:
    - not ansible_check_mode
    - cache.rc != 0

- name: adjust permissions for cache directory
  file:
    path: "{{ userli_symfony_path }}/var/cache/prod"
    state: directory
    owner: "{{ userli_user }}"
    group: "{{ userli_group }}"
    mode: u+rw,g+r
    recurse: True

- name: adjust permissions for log directory
  file:
    path: "{{ userli_symfony_path }}/var/log"
    state: directory
    owner: "{{ userli_user }}"
    group: "{{ userli_group }}"
    mode: 04755

- name: create or adjust permissions for prod.log
  file:
    path: "{{ userli_symfony_path }}/var/log/{{ item }}"
    owner: "{{ userli_user }}"
    group: "{{ userli_group }}"
    mode: 0664
    state: touch
    access_time: preserve
    modification_time: preserve
  with_items:
    - prod.log
    - prod.deprecations.log

- name: load default reservedNames into database
  command: bin/console app:reservednames:import
  args:
    chdir: "{{ userli_symfony_path }}"
  environment:
    APP_ENV: "prod"
  become_user: "{{ userli_user }}"

- name: load custom reservedNames into database
  command: 'echo "{{ userli_extra_reserved_names|join("\n") }}"
    | bin/console app:reservednames:import --file=-'
  args:
    chdir: "{{ userli_symfony_path }}"
  environment:
    APP_ENV: "prod"
  become_user: "{{ userli_user }}"
