---
- name: Clear and warmup cache
  ansible.builtin.command: bin/console cache:clear && bin/console cache:warmup
  args:
    chdir: "{{ userli_symfony_path }}"
  environment:
    APP_ENV: "prod"
  become_user: "{{ userli_user }}"
  ignore_errors: true
  register: cache
  changed_when: cache.rc != 0
  failed_when: cache.rc != 0

- name: Clear cache
  ansible.builtin.file:
    path: "var/cache/prod"
    state: absent

- name: Warmup cache # noqa no-changed-when
  ansible.builtin.command: bin/console cache:warmup
  args:
    chdir: "{{ userli_symfony_path }}"
  environment:
    APP_ENV: "prod"
  become_user: "{{ userli_user }}"
  when:
    - not ansible_check_mode
    - cache.rc != 0

- name: Adjust permissions for cache directory
  ansible.builtin.file:
    path: "{{ userli_symfony_path }}/var/cache/prod"
    state: directory
    owner: "{{ userli_user }}"
    group: "{{ userli_group }}"
    mode: u+rw,g+r
    recurse: true

- name: Adjust permissions for log directory
  ansible.builtin.file:
    path: "{{ userli_symfony_path }}/var/log"
    state: directory
    owner: "{{ userli_user }}"
    group: "{{ userli_group }}"
    mode: "04755"

- name: Create or adjust permissions for prod.log
  ansible.builtin.file:
    path: "{{ userli_symfony_path }}/var/log/{{ item }}"
    owner: "{{ userli_user }}"
    group: "{{ userli_group }}"
    mode: "0664"
    state: touch
    access_time: preserve
    modification_time: preserve
  with_items:
    - prod.log
    - prod.deprecations.log

- name: Load default reservedNames into database
  ansible.builtin.command: bin/console app:reservednames:import
  args:
    chdir: "{{ userli_symfony_path }}"
  environment:
    APP_ENV: "prod"
  become_user: "{{ userli_user }}"
  register: __userli_reserved_names
  changed_when: __userli_reserved_names.rc != 0
  failed_when: __userli_reserved_names.rc != 0

- name: Load custom reservedNames into database
  ansible.builtin.command: |
    'echo "{{ userli_extra_reserved_names | join("\n") }}" | bin/console app:reservednames:import --file=-'
  args:
    chdir: "{{ userli_symfony_path }}"
  environment:
    APP_ENV: "prod"
  become_user: "{{ userli_user }}"
  register: __userli_reserved_names
  changed_when: __userli_reserved_names.rc != 0
  failed_when: __userli_reserved_names.rc != 0
