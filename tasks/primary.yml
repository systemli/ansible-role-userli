---

- name: ensure database is present
  mysql_db:
    name: "{{ userli_mysql_db }}"
    state: present
    encoding: "utf8"
    collation: "utf8_general_ci"
    login_unix_socket: /run/mysqld/mysqld.sock
  register: database_creation

- name: ensure mysql user is present
  mysql_user:
    name: "{{Â userli_mysql_user }}"
    password: "{{ userli_mysql_password }}"
    priv: "{{ userli_mysql_priv }}"
    host: "localhost"
    login_unix_socket: /run/mysqld/mysqld.sock

- name: allow mysql users from secondary instance
  mysql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    priv: "{{ userli_mysql_db }}.*:INSERT,SELECT,UPDATE/{{ userli_mysql_db }}.virtual_aliases:DELETE/{{ userli_mysql_db }}.virtual_vouchers:DELETE"
    host: "{{ item.host }}"
    login_unix_socket: /run/mysqld/mysqld.sock
  with_items: "{{ userli_secondary_users }}"
  when: userli_secondary_users is defined

- name: create default database schema
  shell: bin/console doctrine:schema:create
  args:
    chdir: "{{ userli_symfony_path }}"
  environment:
    APP_ENV: "prod"
  become_user: "{{ userli_user }}"
  when: database_creation.changed

- name: ensure deleted users are purged daily
  cron:
    name: "Purge deleted mail users"
    job: "cd {{ userli_symfony_path }} && APP_ENV=prod php bin/console app:users:remove -q --env prod"
    special_time: "daily"
    user: "{{ userli_user }}"
    cron_file: userli

- name: ensure weekly report job is latest
  cron:
    name: "Weekly Report"
    job: "cd {{ userli_symfony_path }} && APP_ENV=prod php bin/console app:report:weekly --env prod"
    weekday: '1'
    hour: '13'
    minute: '12'
    user: "{{ userli_user }}"
    cron_file: userli
    state: "{{ userli_cron_weekly }}"

- name: ensure old redeemed vouchers are unlinked
  cron:
    name: "Unlink old redeemed vouchers"
    job: "cd {{ userli_symfony_path }} && APP_ENV=prod php bin/console app:voucher:unlink --env prod"
    special_time: "daily"
    user: "{{ userli_user }}"
    cron_file: userli
